### Obtener todos los estudiantes
GET http://localhost:3000/api/students

### Obtener un estudiante por id
GET http://localhost:3000/api/students/1

### Obtener un usuario que no existe
GET http://localhost:3000/api/users/999

### Crear un usuario con contraseña encriptada
POST http://localhost:3000/api/users
Content-Type: application/json

{
  "email": "secureuser@example.com",
  "password": "securepassword",
  "type": "admin"
}

### Crear un usuario con email duplicado
POST http://localhost:3000/api/users
Content-Type: application/json

{
  "email": "duplicate@example.com",
  "password": "password123",
  "type": "user"
}

### Crear un estudiante
POST http://localhost:3000/api/students
Content-Type: application/json

{
  "dni": "11223344D",
  "name": "Jesús",
  "last_name": "Areso",
  "date_of_birth": "10-05-2001",
  "teacher_id": 1
}

### Intentar borrar un usuario con un profesor asociado
DELETE http://localhost:3000/api/users/5

### Crear un profesor sin estudiantes
POST http://localhost:3000/api/teachers
Content-Type: application/json

{
  "dni": "12345678A",
  "name": "Luis",
  "last_name": "García",
  "date_of_birth": "10-05-1980",
  "user_id": 3
}

### Crear un profesor sin nombre
POST http://localhost:3000/api/teachers
Content-Type: application/json

{
  "dni": "22334455F",
  "last_name": "Martinez",
  "date_of_birth": "15-03-1975",
  "user_id": 2
}

### Intentar borrar un profesor sin estudiantes asociados
DELETE http://localhost:3000/api/teachers/<ID DEL PROFESOR RECIÉN CREADO>

### Crear un usuario sin profesor asociado
POST http://localhost:3000/api/users
Content-Type: application/json

{
  "email": "example@example.com",
  "password": "password1234",
  "type": "user"
}

### Intentar borrar un usuario sin profesor asociado
DELETE http://localhost:3000/api/users/<ID DEL USUARIO RECIÉN CREADO>


